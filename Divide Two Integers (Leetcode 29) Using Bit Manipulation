class Solution {
    public int divide(int dividend, int divisor) {       
        boolean isNegative = false;
        if((dividend <= 0 && divisor > 0) || (dividend >= 0 && divisor < 0))
           isNegative = true;

        long x = Math.abs((long)divisor);
        long y = Math.abs((long)dividend);
        long ans = 0;
        while(y >= x){
            long count = 0;
            while((x << (count + 1)) <= y){
                count++;
            }
            y -= (x << count);
            ans += (1 << count);
        }
        if(ans == (1 << 31) && isNegative == false)
           return Integer.MAX_VALUE;
        if(ans == (1 << 31) && isNegative == true)
           return Integer.MIN_VALUE;
        return (isNegative) ? (int)(-1 * ans) : (int)ans;
    }
}
